name: Release

on:
  schedule:
    - cron: '0 0 * * 0'  # Trigger every Sunday at midnight
  workflow_dispatch: # Allow manual triggering
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event.repository.pushed_at != github.event.repository.updated_at }}  # Only trigger if there are new commits in the main branch

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Get latest release
        id: latest-release
        uses: actions/github-script@v6
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const latestRelease = releases.data[0];
            return latestRelease.tag_name;

      - name: Bump minor version
        id: bump-minor
        run: |
          if [ -z "${{ steps.latest-release.outputs.result }}" ]; then
            echo "::set-output name=new-tag::v0.1.0"
          else
            CURRENT_TAG=${{ steps.latest-release.outputs.result }}
            MINOR_VERSION=$(echo $CURRENT_TAG | cut -d '.' -f 2)
            NEW_MINOR_VERSION=$((MINOR_VERSION + 1))
            NEW_TAG=$(echo $CURRENT_TAG | sed "s/\.$MINOR_VERSION/\.$NEW_MINOR_VERSION/")
            echo "::set-output name=new-tag::$NEW_TAG"
          fi

      - name: Check if tag exists
        id: check-tag
        run: |
          if git ls-remote --tags origin ${{ steps.bump-minor.outputs.new-tag }} | grep -q ${{ steps.bump-minor.outputs.new-tag }}; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Create and push tag
        if: ${{ steps.check-tag.outputs.exists == 'false' }}
        run: |
          git tag -a ${{ steps.bump-minor.outputs.new-tag }} -m "Automated release"
          git push origin ${{ steps.bump-minor.outputs.new-tag }}

      - name: Install Gorelaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          futureRelease: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
